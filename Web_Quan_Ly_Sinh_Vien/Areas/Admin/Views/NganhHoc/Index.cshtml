@model tblNganhHoc

@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="card shadow mb-4 border-left-info">
    <div class="card-header py-3">
        <div class="float-left mt-2">
            <h5 class="m-0 font-weight-bold text-primary">Danh sách các ngành học</h5>
        </div>
        <div class="float-right mb-n3">
            <a data-toggle="modal" href="#addModal" class="btn btn-primary mb-3 btn-icon-split">
                <span class="icon text-white">
                    <i class="fas fa-plus-circle"></i>
                </span>
                <span class="text">Thêm mới</span>
            </a>
        </div>
    </div>
    <div class="card-body LoadALlNganhHoc">
        @Html.Action("LoadAllNganhHoc", "NganhHoc")
    </div>
    <div class="card-footer">

    </div>
</div>

<!-- The Modal -->
<div class="modal fade" id="addModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title text-info">Thêm mới ngành học</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                @*<div class="form-group">
                    @Html.LabelFor(model => model.MaNganh, htmlAttributes: new { @class = "control-label col-md" })
                    <div class="col-md">
                        @Html.EditorFor(model => model.MaNganh, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaNganh, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.TenNganh, htmlAttributes: new { @class = "control-label col-md" })
                    <div class="col-md">
                        @Html.EditorFor(model => model.TenNganh, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TenNganh, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            <div class="modal-footer">
                <div class="">
                    <button type="button" class="create btn btn-outline-success"><i class="fas fa-plus-circle"></i> Thêm mới</button>
                    <button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="fas fa-times"></i> Đóng</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- The Modal -->
<div class="modal fade" id="delModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title text-primary">Thông báo</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <h6 class="text text-warning text-wr">Bạn có muốn xóa ngành học này không ?</h6>
            </div>

            <!-- Modal footer -->
            <div class="modal-footer">
                <div class="form-actions no-color">
                    <button type="button" value="" data-dismiss="modal" class="Xoa btn btn-outline-danger far fa-trash-alt"> Xóa </button>
                </div>
                <button type="button" class="btn btn-outline-primary" data-dismiss="modal"> Không </button>
            </div>

        </div>
    </div>
</div>

<!-- The Modal -->
<div class="modal fade" id="infModal">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title text-info">Thông tin ngành học</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <div class="modal-body">
                @Html.Hidden("Id2")
                @*<div class="form-group">
                    @Html.Label("Mã ngành", new { @class = "control-label col-md" })
                    <div class="col-md">
                        @Html.Editor("MaNganh2", new { htmlAttributes = new { @class = "form-control", @Readonly = "" } })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.Label("Tên ngành", new { @class = "control-label col-md" })
                    <div class="col-md">
                        @Html.Editor("TenNganh2", new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <div class="">
                    <button type="button" class="update btn btn-outline-success"><i class="far fa-edit"></i> Cập nhật</button>
                    <button type="button" class="btn btn-outline-primary" data-dismiss="modal"><i class="fas fa-times"></i> Đóng</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Script {

    @*Link script sử dụng table view*@

    <!-- Page level plugins -->
    <script src="~/Assets/vendor/datatables/jquery.dataTables.min.js"></script>
    <script src="~/Assets/vendor/datatables/dataTables.bootstrap4.min.js"></script>

    <!-- Page level custom scripts -->
    <script src="~/Assets/js/demo/datatables-demo.js"></script>

    <!-- Custom styles for this page -->
    <link href="~/Assets/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">

    <script src="//cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

    <script>
        $(document).ready(function () {
            $('[data-toggle="tooltip"]').tooltip();

            $(".nav-1").addClass("show");

            $('body').on('click', '.delete', function () {
                $('#delModal').modal();
                $(".Xoa").val($(this).attr('data-id'));
            });

            $('body').on('click', '.create', function () {
                var TenNganh = $("#TenNganh").val();
                var formData = new FormData;
                formData.append("TenNganh", TenNganh);
                $.ajax({
                    async: true,
                    url: '@Url.Action("Create", "NganhHoc")',
                    data: formData,
                    contentType: false,
                    processData: false,
                    dataType: 'json',
                    type: 'POST',
                    success: function (data) {
                        if (data.status == true) {
                            LoadAllNganhHoc();
                            toastr.options.positionClass = "toast-bottom-right";
                            toastr.success("Thêm mới thành công");
                            $('#addModal').modal('hide');
                            $("#MaNganh").val('');
                            $("#TenNganh").val('');
                        }
                        else {
                            alert(data.status);
                            toastr.options.positionClass = "toast-bottom-right";
                            toastr.warning('Thêm mới không thành công');
                        }
                    },
                    error: function () {
                        toastr.options.positionClass = "toast-bottom-right";
                        toastr.warning('Thêm mới không thành công');
                    }
                });
            });

            $('body').on('click', '.Xoa', function () {
                var MaNganh = $(".Xoa").val();
                $.ajax({
                    async: true,
                    url: '@Url.Action("Delete", "NganhHoc")',
                    data: { id: MaNganh },
                    dataType: 'json',
                    type: "POST",
                    success: function (data) {
                        if (data.status == true) {
                            LoadAllNganhHoc();
                            toastr.options.positionClass = "toast-bottom-right";
                            toastr.success("Xóa thành công");
                        }
                        if (data.status == false) {
                            alert("Không thể xóa ngành học này");
                            toastr.options.positionClass = "toast-bottom-right";
                            toastr.warning("Xóa không thành công");
                        }
                    },
                    error: function () {
                        toastr.options.positionClass = "toast-bottom-right";
                        toastr.warning('Xóa không thành công');
                    }
                });
            });

            $(".update").click(function () {
                var MaNganh = $("#Id2").val();
                var TenNganh = $("#TenNganh2").val();
                var formData = new FormData;
                formData.append("Id", MaNganh);
                formData.append("TenNganh", TenNganh);
                $.ajax({
                    async: true,
                    url: '@Url.Action("CapNhatNganhHoc", "NganhHoc")',
                    contentType: false,
                    processData: false,
                    data: formData,
                    dataType: 'json',
                    type: 'POST',
                    success: function (data) {
                        if (data.status == true) {
                            LoadAllNganhHoc();
                            toastr.options.positionClass = "toast-bottom-right";
                            toastr.success("Chỉnh sửa thành công");
                            $('#infModal').modal('hide');
                        }
                        else {
                            alert(data.status);
                            toastr.options.positionClass = "toast-bottom-right";
                            toastr.warning('Chỉnh sửa không thành công');
                        }
                    },
                    error: function () {
                        toastr.options.positionClass = "toast-bottom-right";
                        toastr.warning('Chỉnh sửa không thành công');
                    }

                });
            });

            $('body').on('click', '.information', function () {
                $('#infModal').modal();
                var MaNganh = $(this).attr('data-id');
                $.ajax({
                    url: '@Url.Action("LoadNganhHoc", "NganhHoc")',
                    data: { MaNganh: MaNganh },
                    dataType: 'json',
                    type: 'POST',
                    success: function (data) {
                        $('#Id2').val(data.Id);
                        $('#TenNganh2').val(data.TenNganh);
                    },
                    error: function () {
                        alert("Đã có lỗi xảy ra");
                    }
                });
            });

            function LoadAllNganhHoc() {
                $('#dataTable').DataTable().clear();
                $('.table-responsive').remove();
                $.ajax({
                    url: '@Url.Action("LoadAllNganhHoc", "NganhHoc")',
                    dataType: 'html',
                    type: 'GET',
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        $('.LoadALlNganhHoc').html(data);
                        $('#dataTable').DataTable().draw();
                        $('[data-toggle="tooltip"]').tooltip();
                    },
                    error: function () {
                        alert("Đã có lỗi xảy ra");
                    },
            });
            }
        });

    </script>
}

